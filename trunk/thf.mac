#turbo 40

#Event	NoHold					"Your spell did not take hold."
#Event	Tell					"#1# tells you, '#2#'"
#Event	Dead    				"#*#Returning to #*#"
#Event	Camp					"It will take #*# seconds to prepare your camp."
#Event	Hail					"You say, 'Hail, #1#'"
#Event	Task					"Your task #1# has been updated."
#Event	Assign					"You have been assigned the task #1#."
#Event	Group					"#1# invites you to join a group."
#EVENT 	DraekonVoice 			"You hear the voice of #1# calling to you, 'Come to me young one, we must combine our might to destroy him!'"
#EVENT 	DraekonVoiceEnd	 		"You join your powers with #1#, preventing Draekon from attacking!"
#EVENT 	DraekonNoGrass 			"The world begins to spin as Draekon starts to chant an evil spell pulling you towards him."
#EVENT 	DraekonGrass 			"You escape the power of Draekon's spell"
#EVENT 	DraekonBelly 			"The world begins to spin as Draekon starts to chant a powerful spell pushing you away from him."
#Event	EQBC 					"<#1#> #2#"
#Event	EQBC 					"[#1#(msg)] #2#"
#Event	Follow					"#1# tells Team:#2#, 'Follow #3#'"
#Event	Zone					"You have entered #*#"

#include thf_includes\thf_Setup.inc

Sub Main
	/call checkPlugins
	/call declareInis
	
	/declare Delai int outer 6
	/declare myMain string outer "conradd"
	/declare channel int outer 0

	/call joinChannel
	/call checkPlugIn
	/call SetupAdvLootVars
	/call loadCustomVars
	/chat ${channel} Starting THF Macro for ${Me.Class}
	
	:MainLoop
		/call checkToons
		|/if (${Defined[looptest]}) /varset looptest ${Math.Calc[${looptest}+1]}
		|/call LPS
		/doevents
		/call instantBuff
		| Commands will be executed when in combat, no casting going on and the cursor is free.
		/call isHolyShit
		/if (${Macro.Return}) {
			/doevents
			/call checkHolyShitBuff
			/doevents
			/call checkDiscipline
		}
		| Commands will be executed when not in combat, not casting and the cursor is free. 
		/call isDownShit
		/if (${Macro.Return}) {
			/doevents
			/call checkDownShitBuff
			/doevents
			/call checkSpellBuff
		}
	/goto :MainLoop
	
	/if (${Debug}) /echo |- MainLoop ==>

	| If my class is not set, I must not be in game, end the macro.
	/if (!${Bool[${Me.Class}]}) {
		/call endMacro
	} else {
		|***********************************************************************************|
		|******************************* Background Functions ******************************|
		|***********************************************************************************|
	
		/if (${ActionTaken}) /varset ActionTaken FALSE
		
		/if (${currentZone} != ${Zone.ID}) /call check_Zone
		/if (${Following} && !${Assisting}) /call check_Follow
		/call check_Active
		/call check_Combat
		/call check_Idle
		
		| If I'm not holding an item, check Life Support and Instant Buffs.
		/if (!${Bool[${Cursor}]}) {
			| Check if I'm casting
			/if (!${Me.Casting.ID} || ${Me.Casting.ID} && ${Me.Class.ShortName.Equal[BRD]}) {
				| Check LifeSupport
				/if (${lifeSupport.Size} && ${Me.PctHPs} < 100) /call check_lifeSupport
				| Check Instant buffs
				/if (${BuffCheck} && ${InstantBuffs.Size} && ${Me.FreeBuffSlots} > ${MaxBuffs}) /call buffInstants
			}
		} else {
			/chat ${channel} I have something on cursor !
		}
		
		/call Background_Events
		/doevents
	
		| If I'm not active, call mainFunctions
		/if (!${activeTimer}) {
		
			| check for a pending item exchange
			/if (${swapItemBack} && !${itemExchange_Timer}) /call completePendingExchange

|	******************************************************************************	|
|   ******************************* Main Functions *******************************	|
|	******************************************************************************	|
			/for i 1 to ${mainLoop_Array.Size}
				/if (${Bool[${mainLoop_Array[${i}]}]}) /call ${mainLoop_Array[${i}]}
			/if (!${ActionTaken}) /next i
	
|	**********************************************************************************	|
|   ******************************* Tertiary Functions *******************************	|
|	**********************************************************************************	|
			
			| MedBreak
			/if (${medBreak}) /call check_MedBreak
			
			| Maintain macro timers
			/if (${timerArray.Size}) /call check_macroTimers
		}
	}

	/if (${Debug}) {
		/echo <== MainLoop -|
		/delay 5
	}
	/goto :MainLoop	
	/call endMacro
/return